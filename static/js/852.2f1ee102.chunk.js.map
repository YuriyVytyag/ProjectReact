{"version":3,"file":"static/js/852.2f1ee102.chunk.js","mappings":"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","sources":["redux/dailyRate/dailyRate-selectors.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Daily/DailyCaloriesForm.styled.jsx","components/Daily/DailyCaloriesForm.jsx","pages/MainPage/MainPage.jsx"],"sourcesContent":["export const selectKcal = state => state.daily.dailyRate;\nexport const selectNotAllowedProducts = state => state.daily.notAllowedProducts;\nexport const selectDailyRate = state => state.daily.dailyRate;\n","import styled from '@emotion/styled';\nimport { Box, Typography, Button } from '@mui/material';\n\nexport const Container = styled.div`\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const Wrapper = styled(Box)`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #ffffff;\n  box-shadow: 0px 22px 40px rgba(0, 0, 0, 0.1);\n  padding-bottom: 100px;\n\n  @media (min-width: 768px) {\n    width: 670px;\n    height: 400px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    padding-bottom: 40px;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  display: block;\n  padding: 0;\n  width: 210px;\n  height: 43px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.2;\n  background-color: #fc842d;\n  color: white;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  border-radius: 30px;\n  :hover {\n    background-color: white;\n    color: #fc842d;\n  }\n`;\nexport const CloseButton = styled(Button)`\n  display: none;\n  @media (min-width: 768px) {\n    display: block;\n    padding: 0;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    min-width: 24px;\n    :hover {\n    }\n  }\n`;\nexport const StyledTitle = styled(Typography)`\n  display: block;\n  padding: 0;\n  padding-top: 12px;\n  padding-bottom: 20px;\n  border-top: 1px solid #e0e0e0;\n\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n`;\nexport const StyledHeader = styled.h2`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  padding: 0;\n  width: 325px;\n\n  font-size: 26px;\n  line-height: 36px;\n  font-weight: 700;\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 140%;\n  }\n`;\nexport const Calories = styled.p`\n  margin-top: 20px;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 58px;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  color: #264061;\n`;\nexport const BackIcon = styled(Box)`\n  position: absolute;\n  top: -40px;\n  height: 40px;\n  width: inherit;\n  padding: 0 32px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  background: #eff1f3;\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\nexport const BackBtn = styled.button`\n  background-color: none;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n","import * as React from 'react';\nimport { Modal } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nimport { Close as CloseIcon } from '@mui/icons-material';\nimport KeyboardReturnIcon from '@mui/icons-material/KeyboardReturn';\nimport { useSelector } from 'react-redux';\nimport {\n  selectKcal,\n  selectNotAllowedProducts,\n} from 'redux/dailyRate/dailyRate-selectors';\n\n// import { useState, useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { dailyRate } from 'redux/dailyRate/dailyRate-operations';\n\nimport {\n  StyledButton,\n  CloseButton,\n  StyledTitle,\n  StyledHeader,\n  Wrapper,\n  Calories,\n  BackIcon,\n  BackBtn,\n  Container,\n} from './Modal.styled';\n\nconst style = {\n  p: 4,\n};\n\nexport default function BasicModal({ open, onClose, setOpen }) {\n  const handleClose = () => setOpen(!open);\n  const calories = useSelector(selectKcal);\n  const notAllowedProducts = useSelector(selectNotAllowedProducts);\n  const products = notAllowedProducts.slice(0, 4);\n\n  // const[respons, setRespons] = useState();\n  // const dispatch = useDispatch();\n\n  //  useEffect(()=>{\n  // dispatch(dailyRate(value))\n  //  }, [dispatch])\n\n  return (\n    <Container>\n      <Modal\n        open={open}\n        // onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Wrapper sx={style}>\n          <BackIcon>\n            <BackBtn type=\"button\" onClick={handleClose}>\n              <KeyboardReturnIcon />\n            </BackBtn>\n          </BackIcon>\n          <CloseButton onClick={handleClose}>\n            <CloseIcon sx={{ fill: 'black' }} />\n          </CloseButton>\n          <StyledHeader id=\"modal-modal-title\">\n            Your recommended daily calorie intake is\n          </StyledHeader>\n          <Calories>{calories} ккал</Calories>\n          <StyledTitle id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            Foods you should not eat\n          </StyledTitle>\n          <ol>\n            {products.map(product => {\n              return <li key={product}>{product}</li>;\n            })}\n          </ol>\n          <Link to=\"/register\">\n            <StyledButton>Start losing weight</StyledButton>\n          </Link>\n        </Wrapper>\n      </Modal>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Button, FormLabel, TextField, FormControlLabel } from '@mui/material';\nimport { orange } from '@mui/material/colors';\n\nexport const FormWrapper = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-top: 30px;\n  @media (min-width: 768px) {\n    margin-top: 100px;\n  }\n  @media (min-width: 1280px) {\n    margin-top: 140px;\n  }\n`;\n\nexport const Title = styled.h1`\n  width: 280px;\n  color: #212121;\n  font-size: 18px;\n  margin-bottom: 34px;\n  @media (min-width: 768px) {\n    width: 504px;\n    font-size: 34px;\n    margin-bottom: 68px;\n  }\n`;\n\nexport const FormButton = styled(Button)`\n  text-transform: none;\n  padding: 13px 25px;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  border-radius: 30px;\n  line-height: 17px;\n  width: 210px;\n  background-color: #fc842d;\n  &:hover,\n  :focus {\n    background-color: #f97619;\n  }\n`;\n\nexport const RadioWraper = styled.div`\n  margin-top: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const MainWrap = styled.div`\n  margin-bottom: 40px;\n  width: 240px;\n  @media (min-width: 768px) {\n    display: flex;\n    gap: 40px;\n    margin-bottom: 60px;\n    width: 100%;\n  }\n`;\n\nexport const LeftWrap = styled.div`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const RightWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  @media (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'orange',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'orange',\n  },\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: 'orange',\n    },\n  },\n});\n\nexport const StyledFormControlLabel = styled(props => (\n  <FormControlLabel {...props} />\n))(({ checked }) => ({\n  '.MuiFormControlLabel-label': checked && {\n    color: orange[600],\n  },\n}));\n\nexport const StyledFormLabel = styled(FormLabel)({\n  '&.MuiFormLabel-root.Mui-focused': {\n    color: orange[600],\n  },\n});\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dailyRate } from 'redux/dailyRate/dailyRate-operations';\nimport { dailyRateUserId } from 'redux/dailyDateUserId/dailyDateUserId-operations';\nimport { selectIsAuth } from 'redux/auth/auth-selectors';\nimport BasicModal from 'components/Modal/Modal';\nimport * as yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { selectUser } from 'redux/auth/auth-selectors';\nimport { orange } from '@mui/material/colors';\nimport {\n  useRadioGroup,\n  Radio,\n  RadioGroup,\n  FormControl,\n} from '@mui/material';\nimport {\n  FormWrapper,\n  FormButton,\n  Title,\n  RadioWraper,\n  MainWrap,\n  LeftWrap,\n  RightWrap,\n  ButtonWrap,\n  CssTextField,\n  StyledFormLabel,\n  StyledFormControlLabel,\n} from './DailyCaloriesForm.styled';\n\nlet schema = yup.object().shape({\n  height: yup.number().positive().required(),\n  age: yup.number().positive().required(),\n  weight: yup.number().positive().required(),\n  desiredWeight: yup.number().positive().required(),\n  bloodType: yup.string(),\n});\n\nfunction MyFormControlLabel(props) {\n  const radioGroup = useRadioGroup();\n  let checked = false;\n  if (radioGroup) {\n    checked = radioGroup.value === props.value;\n  }\n  return (\n    <StyledFormControlLabel\n      checked={checked}\n      control={\n        <Radio\n          sx={{\n            '&.Mui-checked': {\n              color: orange[600],\n            },\n          }}\n        />\n      }\n      {...props}\n    />\n  );\n}\n\nconst DailyCaloriesForm = () => {\n  const [localStorageData] = useState(\n    JSON.parse(localStorage.getItem('dailyRateData'))\n  );\n  const [openModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsAuth);\n\n  const InitialValues = {\n    height: localStorageData ? localStorageData.height : '',\n    age: localStorageData ? localStorageData.age : '',\n    weight: localStorageData ? localStorageData.weight : '',\n    desiredWeight: localStorageData ? localStorageData.desiredWeight : '',\n    bloodType: localStorageData ? localStorageData.bloodType : '1',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { bloodType, ...res } = values;\n    const newFormData = {\n      ...res,\n      bloodType: Number(bloodType),\n    };\n    localStorage.setItem('dailyRateData', JSON.stringify(newFormData));\n    if (isLoggedIn) {\n      dispatch(dailyRateUserId({ id: user.id, data: newFormData }));\n    } else {\n      dispatch(dailyRate(newFormData));\n      setOpenModal(!openModal);\n    }\n    resetForm();\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  return (\n    <FormWrapper>\n      <Title>Calculate your daily calorie intake right now</Title>\n      <Formik\n        initialValues={InitialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        {({ values, handleChange, handleBlur }) => (\n          <Form>\n            <MainWrap>\n              <LeftWrap>\n                <CssTextField\n                  required\n                  name=\"height\"\n                  label=\"Height\"\n                  type=\"number\"\n                  variant=\"standard\"\n                  value={values.height || ''}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <CssTextField\n                  required\n                  name=\"age\"\n                  label=\"Age\"\n                  type=\"number\"\n                  variant=\"standard\"\n                  value={values.age || ''}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <CssTextField\n                  required\n                  name=\"weight\"\n                  label=\"Weight\"\n                  type=\"number\"\n                  variant=\"standard\"\n                  value={values.weight || ''}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n              </LeftWrap>\n              <RightWrap>\n                <CssTextField\n                  required\n                  name=\"desiredWeight\"\n                  label=\"Desired weight\"\n                  type=\"number\"\n                  variant=\"standard\"\n                  value={values.desiredWeight || ''}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <RadioWraper>\n                  <FormControl>\n                    <StyledFormLabel id=\"demo-radio-buttons-group-label\">\n                      Blood type*\n                    </StyledFormLabel>\n                    <RadioGroup\n                      aria-labelledby=\"demo-radio-buttons-group-label\"\n                      value={values.bloodType}\n                      name=\"bloodType\"\n                      row\n                    >\n                      <MyFormControlLabel\n                        value=\"1\"\n                        label=\"1\"\n                        onChange={handleChange}\n                        checked={values.bloodType === '1'}\n                      />\n                      <MyFormControlLabel\n                        value=\"2\"\n                        label=\"2\"\n                        onChange={handleChange}\n                        checked={values.bloodType === '2'}\n                      />\n                      <MyFormControlLabel\n                        value=\"3\"\n                        label=\"3\"\n                        onChange={handleChange}\n                        checked={values.bloodType === '3'}\n                      />\n                      <MyFormControlLabel\n                        value=\"4\"\n                        label=\"4\"\n                        onChange={handleChange}\n                        checked={values.bloodType === '4'}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </RadioWraper>\n              </RightWrap>\n            </MainWrap>\n            <ButtonWrap>\n              <FormButton type=\"submit\" variant=\"contained\">\n                Start losing weight\n              </FormButton>\n            </ButtonWrap>\n          </Form>\n        )}\n      </Formik>\n      {openModal && (\n        <BasicModal\n          open={openModal}\n          onClose={handleCloseModal}\n          setOpen={setOpenModal}\n        />\n      )}\n    </FormWrapper>\n  );\n};\n\nexport default DailyCaloriesForm;\n","import DailyCaloriesForm from 'components/Daily/DailyCaloriesForm';\nimport { AuthBackground } from 'components/AuthBackground';\nimport { selectIsAuth } from 'redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\n\nconst MainPage = () => {\n  const isLoggedIn = useSelector(selectIsAuth);\n  return (\n    <>\n      <DailyCaloriesForm />\n      {!isLoggedIn && (\n        <>\n        <AuthBackground/>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MainPage;\n"],"names":["selectKcal","state","daily","dailyRate","selectNotAllowedProducts","notAllowedProducts","Container","styled","Wrapper","Box","StyledButton","Button","CloseButton","StyledTitle","Typography","StyledHeader","Calories","BackIcon","BackBtn","style","p","BasicModal","open","setOpen","onClose","handleClose","calories","useSelector","products","slice","Modal","sx","type","onClick","KeyboardReturn","Close","fill","id","mt","map","product","to","FormWrapper","Title","FormButton","RadioWraper","MainWrap","LeftWrap","RightWrap","ButtonWrap","CssTextField","TextField","color","borderBottomColor","borderColor","StyledFormControlLabel","props","FormControlLabel","checked","orange","StyledFormLabel","FormLabel","schema","yup","shape","height","positive","required","age","weight","desiredWeight","bloodType","MyFormControlLabel","radioGroup","useRadioGroup","value","control","Radio","useState","JSON","parse","localStorage","getItem","localStorageData","openModal","setOpenModal","dispatch","useDispatch","user","selectUser","isLoggedIn","selectIsAuth","InitialValues","initialValues","onSubmit","values","resetForm","res","newFormData","Number","setItem","stringify","dailyRateUserId","data","validationSchema","handleChange","handleBlur","name","label","variant","onBlur","onChange","FormControl","RadioGroup","row"],"sourceRoot":""}