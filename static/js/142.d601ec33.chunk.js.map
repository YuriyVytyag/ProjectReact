{"version":3,"file":"static/js/142.d601ec33.chunk.js","mappings":"uSAEaA,EAAiBC,EAAAA,KAAaC,MAAM,CAC/CC,SAAUF,EAAAA,KAEPG,IAAI,EAAG,iCACPC,IAAI,IACJC,SAAS,8BACZC,MAAON,EAAAA,KAEJM,MAAM,iBACND,SAAS,8BACZE,SAAUP,EAAAA,KAEPG,IAAI,EAAG,iCACPC,IAAI,KACJC,SAAS,gC,uCCZDG,EAAaC,EAAAA,EAAAA,EAAH,qGAOVC,EAAOD,EAAAA,EAAAA,IAAH,sHAOJE,EAAQF,EAAAA,EAAAA,GAAH,sTAgBLG,GAAUH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,qQAaPK,EAAWL,EAAAA,EAAAA,GAAH,yMAWRM,EAAWN,EAAAA,EAAAA,GAAH,gEAKRO,EAAQP,EAAAA,EAAAA,MAAH,8HAQLQ,GAAQR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,qaAwBLU,EAAmBV,EAAAA,EAAAA,IAAH,8K,GAUPA,EAAAA,EAAAA,OAAH,qlBA2BUA,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,slB,iBChHpBY,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAAChB,EAAD,UAAcgB,GAAlB,GAGpB,EAEKC,EAAgB,CACpBvB,SAAU,GACVI,MAAO,GACPC,SAAU,IAGCmB,EAAmB,WAC9B,OAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAOC,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,SACbJ,GAASK,EAAAA,EAAAA,IAASF,IADL,OAEnBC,IAFmB,2CAAH,wDAKlB,OACE,+BACE,SAAC,KAAD,CACET,cAAeA,EACfW,SAAUJ,EACVK,iBAAkBtC,EAHpB,UAKE,UAACW,EAAD,YACE,SAACC,EAAD,UAAS,cAET,UAACC,EAAD,CAAS0B,aAAa,MAAtB,WACE,UAACxB,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,CAAOuB,QAAQ,WAAf,SAA4B,YAC5B,SAACtB,EAAD,CAAOuB,GAAG,WAAWlB,KAAK,WAAWmB,KAAK,UAC1C,SAACpB,EAAD,CAAWC,KAAK,WAAWoB,UAAU,UAEvC,UAAC3B,EAAD,YACE,SAACC,EAAD,CAAOuB,QAAQ,QAAf,SAAyB,aACzB,SAACtB,EAAD,CAAOuB,GAAG,QAAQlB,KAAK,QAAQmB,KAAK,UACpC,SAACpB,EAAD,CAAWC,KAAK,QAAQoB,UAAU,UAGpC,UAAC3B,EAAD,YACE,SAACC,EAAD,CAAOuB,QAAQ,WAAf,SAA4B,gBAC5B,SAACtB,EAAD,CACEuB,GAAG,WACHlB,KAAK,WACLmB,KAAMb,EAAe,OAAS,cAEhC,SAACP,EAAD,CAAWC,KAAK,WAAWoB,UAAU,OACrC,SAACC,EAAA,EAAD,CACEC,YAxCI,kBAAMf,GAASD,EAAf,EAyCJiB,KAAMjB,WAIZ,UAACT,EAAD,YACE,SAAC2B,EAAA,GAAD,CAAYC,KAAO,cACnB,SAAC,KAAD,CAAMC,GAAG,SAAT,UACE,SAACF,EAAA,GAAD,CAAgBC,KAAO,yBAQtC,ECnFD,EARyB,WACvB,OACE,+BACE,SAACrB,EAAD,KAGL,C","sources":["utils/schemas/RegisterSchema.js","components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/index.jsx","pages/RegistrationPage/index.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const RegisterSchema = yup.object().shape({\n  username: yup\n    .string()\n    .min(3, 'validationRegisterForm.label1')\n    .max(15)\n    .required('validationDiaryForm.label4'),\n  email: yup\n    .string()\n    .email('notify.alert3')\n    .required('validationDiaryForm.label4'),\n  password: yup\n    .string()\n    .min(8, 'validationRegisterForm.label3')\n    .max(100)\n    .required('validationDiaryForm.label4'),\n});\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { Field, Form } from 'formik';\n\nexport const MessageErr = styled.p`\n  color: red;\n  width: 300px;\n  text-align: justify;\n  font-weight: 700;\n`;\n\nexport const Wrap = styled.div`\n  padding-top: 40px;\n  @media screen and (min-width: 768px) {\n    padding-top: 160px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 14px;\n  text-align: center;\n  text-transform: uppercase;\n  color: #fc842d;\n  margin-bottom: 60px;\n  @media screen and (min-width: 768px) {\n    text-align: start;\n    margin-left: 32px;\n  }\n \n  @media screen and (min-width: 1280px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const FormReg = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    align-items: start;\n    margin-left: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const FormList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin-bottom: 60px;\n  list-style: none;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 80px;\n  }\n`;\n\nexport const FormItem = styled.li`\n  position: relative;\n  width: 280px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  height: 16px;\n  color: #9b9faa;\n  letter-spacing: 0.04em;\n  font-weight: 700;\n`;\n\nexport const Input = styled(Field)`\n  height: 20px;\n  width: 100%;\n  outline: none;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  @media screen and (min-width: 768px) {\n    max-width: 240px;\n  }\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  &:focus,\n  :hover {\n    border-bottom: 1px solid #fc842d;\n  }\n\n  &::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  gap: 32px;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  letter-spacing: 0.04em;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  width: 100%;\n  padding: 13px 25px;\n  background-color: #fc842d;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  border-radius: 30px;\n  border: 2px solid #fc842d;\n  color: #ffffff;\n  cursor: pointer;\n  transition: background-color 250ms, color 250ms;\n  &:hover,\n  &:focus {\n    color: #fc842d;\n    background: transparent;\n  }\n  &:disabled {\n    background: #9b9faa;\n    box-shadow: 0px 4px 10px #9b9faa;\n  }\n  max-width: 180px;\n`;\n\nexport const StyledNavLink = styled(Link)`\n  font-weight: 700;\n  letter-spacing: 0.04em;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  width: 100%;\n  padding: 13px 25px;\n  background-color: transparent;\n  border-radius: 30px;\n  border: 2px solid #fc842d;\n  color: #fc842d;\n  cursor: pointer;\n  transition: background-color 250ms, color 250ms;\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n    background: #fc842d;\n  }\n  &:disabled {\n    background: #9b9faa;\n    box-shadow: 0px 4px 10px #9b9faa;\n  }\n  max-width: 180px;\n`;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport { register } from 'redux/auth/auth-operations';\nimport { RegisterSchema } from 'utils/schemas/RegisterSchema';\nimport { ButtonAuth, ButtonLinkAuth } from 'components/Button';\nimport { Link } from 'react-router-dom';\nimport {\n  Title,\n  FormList,\n  FormItem,\n  Label,\n  Input,\n  ButtonsContainer,\n  FormReg,\n  Wrap,\n  MessageErr,\n} from './RegistrationForm.styled';\nimport { ShowPasswordButton } from 'components/Button/ShowPasswordButton';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <MessageErr>{(message)}</MessageErr>}\n    />\n  );\n};\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n};\n\nexport const RegistrationForm = () => {\n  const [showPassword, setShow] = useState(false);\n  const handleClick = () => setShow(!showPassword);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    await dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={RegisterSchema}\n      >\n        <Wrap>\n          <Title>{('Register')}</Title>\n\n          <FormReg autoComplete=\"off\">\n            <FormList>\n              <FormItem>\n                <Label htmlFor=\"username\">{('Name *')}</Label>\n                <Input id=\"username\" name=\"username\" type=\"text\" />\n                <FormError name=\"username\" component=\"p\" />\n              </FormItem>\n              <FormItem>\n                <Label htmlFor=\"email\">{('Email *')}</Label>\n                <Input id=\"email\" name=\"email\" type=\"text\" />\n                <FormError name=\"email\" component=\"p\" />\n              </FormItem>\n\n              <FormItem>\n                <Label htmlFor=\"password\">{('Password *')}</Label>\n                <Input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'true' : 'password'}\n                />\n                <FormError name=\"password\" component=\"p\" />\n                <ShowPasswordButton\n                  handleClick={handleClick}\n                  show={showPassword}\n                />\n              </FormItem>\n            </FormList>\n            <ButtonsContainer>\n              <ButtonAuth text={('Register')} />\n              <Link to=\"/login\">\n                <ButtonLinkAuth text={('Log in')} />\n              </Link>\n            </ButtonsContainer>\n          </FormReg>\n        </Wrap>\n      </Formik>\n    </>\n  );\n};\n","import { RegistrationForm } from 'components/RegistrationForm';\n\nconst RegistrationPage = () => {\n  return (\n    <>\n      <RegistrationForm />\n    </>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RegisterSchema","yup","shape","username","min","max","required","email","password","MessageErr","styled","Wrap","Title","FormReg","Form","FormList","FormItem","Label","Input","Field","ButtonsContainer","Link","FormError","name","render","message","initialValues","RegistrationForm","useState","showPassword","setShow","dispatch","useDispatch","handleSubmit","values","resetForm","register","onSubmit","validationSchema","autoComplete","htmlFor","id","type","component","ShowPasswordButton","handleClick","show","Button","text","to"],"sourceRoot":""}