{"version":3,"file":"static/js/708.50bc0677.chunk.js","mappings":"0NAIaA,EAAMC,EAAAA,EAAAA,MAAH,m4BAgBYC,EAgBAC,GAMfC,EAAQH,EAAAA,EAAAA,GAAH,oWAkBLI,EAAOJ,EAAAA,EAAAA,GAAH,yKAUJK,EAAOL,EAAAA,EAAAA,GAAH,+PAaJM,EAAWN,EAAAA,EAAAA,IAAH,gH,UCnFRO,EAA0B,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,kBAApB,E,uCCM/BC,EAAe,WAC1B,IACMC,GADcC,EAAAA,EAAAA,IAAYN,GACHO,MAAM,EAAE,GAErC,GACED,EAAAA,EAAAA,IAAYE,EAAAA,IADNC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,SAAUR,EAAhC,EAAgCA,UAAWS,EAA3C,EAA2CA,oBAErCC,GAAcN,EAAAA,EAAAA,IAAYO,EAAAA,IAE5BC,EAAaC,MAAQC,OAAO,cAC5BJ,IACFE,EAAaF,EAAYK,KAAKC,MAAM,KAAKC,UAAUC,KAAK,MAG1D,IAAMC,EAAU,CACdX,SAAUA,EAAWY,KAAKC,MAAMb,GAAY,IAC5CD,aAAcA,EAAea,KAAKC,MAAMd,GAAgB,IACxDP,UAAWA,EAAYoB,KAAKC,MAAMrB,GAAa,IAC/CS,oBAAqBA,EACjBW,KAAKC,MAAMZ,GACX,IACJM,KAAMH,GAGR,OACE,UAACtB,EAAD,YACE,4BACE,UAACI,EAAD,0BAAoByB,EAAQJ,SAC5B,UAACpB,EAAD,YACE,UAACC,EAAD,YACE,oCACA,4BAAOuB,EAAQX,SAAf,eAEF,UAACZ,EAAD,YACE,wCACA,4BAAOuB,EAAQZ,aAAf,eAEF,UAACX,EAAD,YACE,0CACA,4BAAOuB,EAAQnB,UAAf,eAEF,UAACJ,EAAD,YACE,yCACA,4BAAOuB,EAAQV,oBAAf,kBAIN,UAACZ,EAAD,YACE,SAACH,EAAD,oCACA,SAACC,EAAD,UACGQ,EAASmB,KAAI,SAAAC,GAAO,OACnB,SAAC3B,EAAD,UAAqB2B,GAAVA,EADQ,WAO9B,C,gIC9DM,IAAMZ,EAAY,SAAAZ,GAAK,OAAIA,EAAMyB,QAAQT,IAAlB,EACjBU,EAAsB,SAAA1B,GAAK,OAAIA,EAAMyB,QAAQE,aAAlB,EAC3BC,EAAc,SAAA5B,GAAK,OAAIA,EAAMyB,QAAQI,KAAlB,EACnBtB,EAAmB,SAAAP,GAAK,OAAIA,EAAMyB,QAAQK,UAAlB,C","sources":["components/RightSideBar/RightSideBar.styled.jsx","redux/dailyDateUserId/dailyDateUserId-selectors.js","components/RightSideBar/RightSideBar.jsx","redux/info/info-selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport imgTablet from '../../assets/images/side-bar-tablet.png';\nimport imgDesctop from '../../assets/images/side-bar-desctop.png';\n\nexport const Bar = styled.aside`\n  background-color: #f0f1f3;\n  background-repeat: no-repeat;\n  font-style: normal;\n  letter-spacing: 0.04em;\n  padding: 40px 20px 52px 20px;\n  margin-top: 40px;\n  @media screen and (min-width: 768px) {\n    padding: 80px 80px 80px 32px;\n    margin-top: 50px;\n    display: flex;\n    flex-direction: row;\n    align-items: baseline;\n    justify-content: flex-start;\n    gap: 80px;\n    width: 100vw;\n    background-image: url(${imgTablet});\n    background-size: contain;\n    background-position: top right;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    gap: 60px;\n    height: 100vh;\n    width: 25vw;\n    position: absolute;\n    right: 0;\n    top: 0;\n    z-index: -10;\n    padding: 292px 123px 166px 106px;\n    margin: 0px;\n    background-image: url(${imgDesctop});\n    background-size: 150%;\n    background-position: right top;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 14px;\n  color: #212121;\n  padding-bottom: 20px;\n  &.headerBottom {\n    padding-top: 40px;\n    @media screen and (min-width: 768px) {\n      padding-top: 0px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding-bottom: 40px;\n  }\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const List = styled.ul`\n  & li:last-child {\n    padding-bottom: 0;\n  }\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n  color: #9b9faa;\n  padding-top: 0;\n  padding-bottom: 20px;\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const FoodWrap = styled.div`\n  margin-top: 20px;\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n  }\n`","export const selectDailyRateProducts = state => state.dailyRate.notAllowedProducts;\n","import { Bar, List, Item, Title, FoodWrap } from './RightSideBar.styled';\nimport { selectDay, selectDaySummary } from 'redux/info/info-selectors';\nimport { selectDailyRateProducts } from 'redux/dailyDateUserId/dailyDateUserId-selectors';\nimport dayjs from 'dayjs';\nimport { useSelector } from 'react-redux';\n\nexport const RightSideBar = () => {\n  const notProducts = useSelector(selectDailyRateProducts);\n  const products = notProducts.slice(0,4)\n  \n  const { kcalConsumed, kcalLeft, dailyRate, percentsOfDailyRate } =\n    useSelector(selectDaySummary);\n  const selectedDay = useSelector(selectDay);\n\n  let formatDate = dayjs().format('DD/MM/YYYY');\n  if (selectedDay) {\n    formatDate = selectedDay.date.split('-').reverse().join('/');\n  }\n\n  const summary = {\n    kcalLeft: kcalLeft ? Math.round(kcalLeft) : '0',\n    kcalConsumed: kcalConsumed ? Math.round(kcalConsumed) : '0',\n    dailyRate: dailyRate ? Math.round(dailyRate) : '0',\n    percentsOfDailyRate: percentsOfDailyRate\n      ? Math.round(percentsOfDailyRate)\n      : '0',\n    date: formatDate,\n  };\n\n  return (\n    <Bar>\n      <div>\n        <Title>Summary for {summary.date}</Title>\n        <List>\n          <Item>\n            <span>Left</span>\n            <span>{summary.kcalLeft} kcal</span>\n          </Item>\n          <Item>\n            <span>Consumed</span>\n            <span>{summary.kcalConsumed} kcal</span>\n          </Item>\n          <Item>\n            <span>Daily rate</span>\n            <span>{summary.dailyRate} kcal</span>\n          </Item>\n          <Item>\n            <span>n% normal</span>\n            <span>{summary.percentsOfDailyRate} %</span>\n          </Item>\n        </List>\n      </div>\n      <FoodWrap>\n        <Title>Food not recommended</Title>\n        <List>\n          {products.map(product => \n            <Item key={product}>{product}</Item>\n          )}\n        </List>\n      </FoodWrap>\n    </Bar>\n  );\n};\n","export const selectDay = state => state.dayInfo.date;\nexport const selectEatenProducts = state => state.dayInfo.eatenProducts;\nexport const selectDayId = state => state.dayInfo.dayId;\nexport const selectDaySummary = state => state.dayInfo.daySummary;\n"],"names":["Bar","styled","imgTablet","imgDesctop","Title","List","Item","FoodWrap","selectDailyRateProducts","state","dailyRate","notAllowedProducts","RightSideBar","products","useSelector","slice","selectDaySummary","kcalConsumed","kcalLeft","percentsOfDailyRate","selectedDay","selectDay","formatDate","dayjs","format","date","split","reverse","join","summary","Math","round","map","product","dayInfo","selectEatenProducts","eatenProducts","selectDayId","dayId","daySummary"],"sourceRoot":""}