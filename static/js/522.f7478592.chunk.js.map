{"version":3,"file":"static/js/522.f7478592.chunk.js","mappings":"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","sources":["components/RightSideBar/RightSideBar.styled.jsx","components/RightSideBar/RightSideBar.jsx","components/DiaryDate小alendar/DiaryDate小alendar.styled.jsx","components/DiaryDate小alendar/DiaryDate小alendar.jsx","components/DiaryAddProductForm/DiaryAddProductForm.styled.jsx","components/DiaryAddProductForm/DiaryAddProductForm.jsx","webpack://react-homework-template/./src/components/DiaryProductsList/DiaryProductsList.module.css?a5d0","components/DiaryProductsList/DiaryProductsList.jsx","pages/Diary/Diary.styled.jsx","pages/Diary/Diary.jsx","redux/info/info-selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport imgTablet from '../../assets/images/side-bar-tablet.png';\nimport imgDesctop from '../../assets/images/side-bar-desctop.png';\n\nexport const Bar = styled.aside`\n  background-color: #f0f1f3;\n  background-repeat: no-repeat;\n  font-style: normal;\n  letter-spacing: 0.04em;\n  padding: 40px 20px 52px 20px;\n  margin-top:40px;\n  @media screen and (min-width: 768px) {\n    padding: 80px 80px 80px 32px;\n    margin-top:50px;\n    display: flex;\n    flex-direction: row;\n    align-items: baseline;\n    justify-content: flex-start;\n    gap: 80px;\n    width: 100vw;\n    background-image: url(${imgTablet});\n    background-size: contain;\n    background-position: top center;\n  }\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    gap: 60px;\n    height: 100vh;\n    width:25vw;\n    position: absolute;\n    right: 0;\n    padding: 292px 123px 166px 106px;\n    margin:0px;\n    background-image: url(${imgDesctop});\n    background-size: 150%;\n    background-position: right top;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 14px;\n  color: #212121;\n  padding-bottom: 20px;\n  &.headerBottom {\n    padding-top: 40px;\n    @media screen and (min-width: 768px) {\n      padding-top: 0px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding-bottom: 40px;\n  }\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const List = styled.ul`\n  & li:last-child {\n    padding-bottom: 0;\n  }\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n  color: #9b9faa;\n  padding-top: 0;\n  padding-bottom: 20px;\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n  }\n`;","import { Bar, List, Item, Title } from './RightSideBar.styled';\nimport { selectDay, selectDaySummary } from 'redux/info/info-selectors';\nimport dayjs from 'dayjs';\nimport { useSelector } from 'react-redux';\n\nexport const RightSideBar = () => {\n  const { kcalConsumed, kcalLeft, dailyRate, percentsOfDailyRate } =\n    useSelector(selectDaySummary);\n  const selectedDay = useSelector(selectDay);\n\n  let formatDate = dayjs().format('DD/MM/YYYY');\n  if (selectedDay) {\n    formatDate = selectedDay.date.split('-').reverse().join('/');\n  }\n\n  const summary = {\n    kcalLeft: kcalLeft ? Math.round(kcalLeft) : '0',\n    kcalConsumed: kcalConsumed ? Math.round(kcalConsumed) : '0',\n    dailyRate: dailyRate ? Math.round(dailyRate) : '0',\n    percentsOfDailyRate: percentsOfDailyRate\n      ? Math.round(percentsOfDailyRate)\n      : '0',\n    date: formatDate,\n  };\n\n  return (\n    <Bar>\n      <div>\n        <Title>Summary for {summary.date}</Title>\n        <List>\n          <Item>\n            <span>Left</span>\n            <span>{summary.kcalLeft} kcal</span>\n          </Item>\n          <Item>\n            <span>Consumed</span>\n            <span>{summary.kcalConsumed} kcal</span>\n          </Item>\n          <Item>\n            <span>Daily rate</span>\n            <span>{summary.dailyRate} kcal</span>\n          </Item>\n          <Item>\n            <span>n% normal</span>\n            <span>{summary.percentsOfDailyRate} %</span>\n          </Item>\n        </List>\n      </div>\n      <div>\n        <Title className=\"headerBottom\">Food not recommended</Title>\n        <List>\n          {/* {Array.isArray(food) && food.map(meal => \n            <Item>{meal.title}</Item>\n          )} */}\n        </List>\n      </div>\n    </Bar>\n  );\n};\n","import styled from 'styled-components';\nimport { DatePicker } from '@mui/x-date-pickers';\n\nexport const DatePickerStyled = styled(DatePicker)`\n.css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root.Mui-error {\n    color: #212121;\n}\n  .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\n    border: none;\n  }\n  .css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root {\n    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n    font-weight: 700;\n    font-size: 34px;\n    line-height: 41px;\n    color: #212121;\n  }\n\n  .css-nxo287-MuiInputBase-input-MuiOutlinedInput-input {\n    width: 219px;\n    font-family: 'Verdana';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 34px;\nline-height: 41px;\n  }\n  .css-1u3bzj6-MuiFormControl-root-MuiTextField-root {\n    min-width: 219px;\n  }\n  .css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input {\n    font: inherit;\n    letter-spacing: inherit;\n    color: currentColor;\n    padding: 4px 0 5px;\n    border: 0;\n    box-sizing: content-box;\n    background: none;\n    height: 1.4375em;\n    margin: 0;\n    -webkit-tap-highlight-color: transparent;\n    display: block;\n    min-width: 0;\n    width: 100%;\n    -webkit-animation-name: mui-auto-fill-cancel;\n    animation-name: mui-auto-fill-cancel;\n    -webkit-animation-duration: 10ms;\n    animation-duration: 10ms;\n    padding: 16.5px 14px;\n    font-weight: 700;\n    font-size: 34px;\n    line-height: 41px;\n    color: #212121;\n  }\n`;\n","import { TextField } from '@mui/material';\nimport dayjs from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { useEffect, useState } from 'react';\nimport { DatePickerStyled } from './DiaryDate小alendar.styled';\nimport { getSelectDate } from 'redux/info/info-slice';\nimport { useDispatch } from 'react-redux';\nimport { getInfoForDay } from 'redux/info/info-operations';\n\nexport default function DiaryDateCalendar() {\n  const now = dayjs().format('DD.MM.YYYY');\n  const dispatch = useDispatch();\n  const [date, setDate] = useState(now);\n\n  useEffect(() => {\n    const formatNow = dayjs().format('YYYY-MM-DD');\n    const dateObject = { date: formatNow };\n    dispatch(getInfoForDay(dateObject));\n    dispatch(getSelectDate(dateObject));\n  }, [dispatch]);\n\n  const handleChange = newDate => {\n    const newDateFormat = newDate.format('YYYY-MM-DD');\n    setDate(newDateFormat);\n    const dateObject = { date: newDateFormat };\n    dispatch(getInfoForDay(dateObject));\n    dispatch(getSelectDate(dateObject));\n  };\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePickerStyled\n          label={now}\n          inputFormat=\"DD.MM.YYYY\"\n          minDate={dayjs('2023-01-01')}\n          value={date}\n          onChange={handleChange}\n          renderInput={props => <TextField {...props} />}\n        />\n      </LocalizationProvider>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nexport const FormStyled = styled(Form)`\n  @media (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n  }\n  @media (min-width: 768px) {\n    display: flex;\n    margin-top: 60px;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const StyledAutocomplete = styled(Autocomplete)`\n    .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\n        width: 280px;\n        border: none;\n        border-radius: 0px;\n        border-bottom: 1px solid #E0E0E0;\n    }\n    @media (min-width: 768px) {\n        .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\n        width: 240px;\n        }\n    } \n`\n\nexport const StyledField = styled(Field)`\n  width: 280px;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  outline: none;\n  padding-bottom: 8px;\n  &::placeholder {\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 1.2;\n    letter-spacing: 0.04em;\n    color: #9b9faa;\n  }\n  @media (max-width: 767px) {\n    margin-top: 32px;\n    margin-bottom: 60px;\n  }\n  @media (min-width: 768px) {\n    width: 106px;\n    padding-bottom: 20px;\n    margin-left: 22px;\n  }\n  &::placeholder {\n    text-align: end;\n  }\n  @media (min-width: 1280px) {\n    width: 107px;\n    margin-left: 48px;\n  }\n`;\n\nexport const AddButton = styled.button`\n  @media (max-width: 767px) {\n    width: 176px;\n    height: 44px;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 1.2;\n    text-align: center;\n    letter-spacing: 0.04em;\n    color: #ffffff;\n    background: #fc842d;\n    border-radius: 30px;\n    border: none;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  }\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\nexport const AddButtonDesktop = styled.button`\n  @media (max-width: 767px) {\n    display: none;\n  }\n  @media (min-width: 768px) {\n    margin-left: 87px;\n    width: 48px;\n    height: 48px;\n    background: #fc842d;\n    color: #ffffff;\n    border-radius: 50%;\n    border: none;\n    font-weight: bold;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  }\n  @media (min-width: 1280px) {\n    margin-left: 60px;\n  }\n`;\n","import TextField from '@mui/material/TextField';\nimport { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { object, string, number } from 'yup';\nimport { searchProducts } from 'services.js/API';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectDay } from 'redux/info/info-selectors';\nimport { addEatenProduct } from 'redux/info/info-operations';\nimport {\n  FormStyled,\n  AddButton,\n  AddButtonDesktop,\n  StyledField,\n  StyledAutocomplete,\n} from './DiaryAddProductForm.styled';\n\nlet productSchema = object({\n  product: string(),\n  weight: number(),\n});\n\nexport default function DiaryAddProductForm() {\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n  const [products, setProducts] = useState([]);\n  const day = useSelector(selectDay);\n\n  const initialValue = {\n    id: null,\n    weight: '',\n  };\n\n  const handleChangeInput = event => {\n    setQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    searchProducts(query).then(response => {\n      const products = response[0].title ? response : [];\n      setProducts(products);\n    });\n  }, [query]);\n\n  const handleAutocomplete = products.map(product => {\n    return {\n      label: product.title.ua,\n      id: product._id,\n    };\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    const productData = {\n      date: day.date,\n      productId: values.id,\n      weight: Number(values.weight),\n    };\n    if (!productData.productId) {\n      resetForm();\n      return;\n    }\n    dispatch(addEatenProduct(productData));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValue}\n      onSubmit={handleSubmit}\n      validationSchema={productSchema}\n    >\n      {({ values, handleChange, setFieldValue }) => (\n        <FormStyled>\n          <StyledAutocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={handleAutocomplete}\n            sx={{ width: 240 }}\n            value={values.name}\n            onChange={(event, newValue) => {\n              handleChange(event);\n              if (!newValue) {\n                return;\n              }\n              setFieldValue('id', newValue.id);\n            }}\n            renderInput={params => (\n              <TextField\n                type=\"input\"\n                onChange={handleChangeInput}\n                {...params}\n                label=\"Enter product name\"\n                name=\"name\"\n                id=\"name\"\n              />\n            )}\n          />\n          <StyledField\n            id=\"grams\"\n            placeholder=\"Grams\"\n            type=\"input\"\n            variant=\"standard\"\n            name=\"weight\"\n            value={values.weight}\n            onChange={handleChange}\n          />\n          <AddButton type=\"submit\">Add</AddButton>\n          <AddButtonDesktop type=\"submit\">+</AddButtonDesktop>\n        </FormStyled>\n      )}\n    </Formik>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"DiaryProductsList_list__6VKWp\",\"wrapper\":\"DiaryProductsList_wrapper__mDJQ2\",\"button\":\"DiaryProductsList_button__EFLdV\",\"text__product\":\"DiaryProductsList_text__product__Axi+V\",\"text__weight\":\"DiaryProductsList_text__weight__4AFLq\",\"text__kcal\":\"DiaryProductsList_text__kcal__96-06\"};","import css from '../DiaryProductsList/DiaryProductsList.module.css';\nimport { MdOutlineClose } from 'react-icons/md';\nimport { selectDayId } from 'redux/info/info-selectors';\nimport { selectEatenProducts } from 'redux/info/info-selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteEatenProduct } from 'redux/info/info-operations';\n\nexport default function DiaryProductsList() {\n  const dispatch = useDispatch();\n  const eatenProductsForDay = useSelector(selectEatenProducts);\n  const dayId = useSelector(selectDayId);\n        \n  const handleClickDelete = (id) => {\n    const deleteProduct = {\n      dayId: dayId,\n      eatenProductId: id,\n    };\n    dispatch(deleteEatenProduct(deleteProduct));\n  };\n\n  return (\n    <ul className={css.list}>\n      {eatenProductsForDay.map(({ id, title, weight, kcal }) => {\n        const roundNumber = Math.round(kcal);\n        return (\n          <li key={id}>\n            <div className={css.wrapper}>\n              <p className={css.text__product}>{title}</p>\n              <p className={css.text__weight}>{weight} g</p>\n              <p className={css.text__kcal}>{roundNumber} kcal</p>\n              <button\n                className={css.button}\n                type=\"button\"\n                onClick={()=>handleClickDelete(id)}\n              >\n                <MdOutlineClose size={12} />\n              </button>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const StyledDiary = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n\nexport const DiaryWrapper = styled.div`\n  margin-top:40px;\n  margin-left: 20px;\n  @media screen and (min-width: 768px) {\n    margin-top: 100px;\n    margin-left: 32px;\n    margin-bottom: 55px\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 150px;\n    margin-left: 16px;\n    margin-bottom: 56px\n  }\n`;","import { RightSideBar } from 'components/RightSideBar/RightSideBar';\nimport DiaryDateCalendar from 'components/DiaryDate小alendar/DiaryDate小alendar';\nimport DiaryAddProductForm from 'components/DiaryAddProductForm/DiaryAddProductForm';\nimport DiaryProductsList from 'components/DiaryProductsList/DiaryProductsList';\nimport { StyledDiary, DiaryWrapper } from './Diary.styled';\n\nconst Diary = () => {\n  return (\n    <StyledDiary>\n      <DiaryWrapper>\n        <DiaryDateCalendar />\n        <DiaryAddProductForm />\n        <DiaryProductsList />\n      </DiaryWrapper>\n      <RightSideBar />\n    </StyledDiary>\n  );\n};\n\nexport default Diary;\n","export const selectDay = state => state.dayInfo.date;\nexport const selectEatenProducts = state => state.dayInfo.eatenProducts;\nexport const selectDayId = state => state.dayInfo.dayId;\nexport const selectDaySummary = state => state.dayInfo.daySummary;\n"],"names":["Bar","styled","imgTablet","imgDesctop","Title","List","Item","RightSideBar","useSelector","selectDaySummary","kcalConsumed","kcalLeft","dailyRate","percentsOfDailyRate","selectedDay","selectDay","formatDate","dayjs","format","date","split","reverse","join","summary","Math","round","className","DatePickerStyled","DatePicker","DiaryDateCalendar","now","dispatch","useDispatch","useState","setDate","useEffect","dateObject","getInfoForDay","getSelectDate","LocalizationProvider","dateAdapter","AdapterDayjs","label","inputFormat","minDate","value","onChange","newDate","newDateFormat","renderInput","props","TextField","FormStyled","Form","StyledAutocomplete","Autocomplete","StyledField","Field","AddButton","AddButtonDesktop","productSchema","object","product","string","weight","number","DiaryAddProductForm","query","setQuery","products","setProducts","day","handleChangeInput","event","target","searchProducts","then","response","title","handleAutocomplete","map","ua","id","_id","initialValues","onSubmit","values","resetForm","productData","productId","Number","addEatenProduct","validationSchema","handleChange","setFieldValue","disablePortal","options","sx","width","name","newValue","params","type","placeholder","variant","DiaryProductsList","eatenProductsForDay","selectEatenProducts","dayId","selectDayId","css","kcal","roundNumber","onClick","deleteProduct","eatenProductId","deleteEatenProduct","handleClickDelete","size","StyledDiary","DiaryWrapper","state","dayInfo","eatenProducts","daySummary"],"sourceRoot":""}